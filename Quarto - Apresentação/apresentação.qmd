---
title: "Trabalho de Amostragem"
title-slide-attributes:
    id: title-slide
    data-background-image: img/background.png
    data-background-size: cover
author: "Diogo, Davi, Gabriel, Giovanni, João"
format:
  revealjs:
    slide-number: true
    transition: slide
    preview-links: true
    embed-resources: true
    logo: img/logo.png
    css: css/lecture.css
    footer: Professor Rogério Boff Borges
    background: "#FFFAFA"
---

```{r setup, include=FALSE}
# documentação do quarto: https://quarto.org/docs/presentations/revealjs/

library(tidyverse)
library(readxl)
library(grid)
library(png)
library(showtext)
library(knitr)
library(kableExtra)
library(survey)
library(presize)
library(RcppAlgos)
library(gridExtra)

set.seed(12345)
```

```{r data, include=FALSE}

db        <- read_excel("../data/artigos.xlsx")
# Alocando em vetores para facilitar a leitura
v_nomes   <- db$nome
v_artigos <- db$quant_artigos
```

## Resumo dos dados

- **Banco de Dados:** Foi coletado o número de "artigos completos publicados em periódicos" de cada professor de estatística da UFRGS 2024/02.
As informações estão disponíveis no site do [IME da UFRGS]("https://www.ufrgs.br/ime/professores/professores-de-estatistica/") e nos respectivos [currículos Lattes]("https://lattes.cnpq.br/") dos docentes.

- **Observação:** A data de atualização dos currículos varia de acordo com cada professor o que pode nos trazer resultados subestimados.

## População Alvo vs População de Pesquisa

- **População Alvo:** São todos os professores de Estatística da UFRGS, independentemente do semestre ou de outros critérios temporais.
- **População de Pesquisa:** Refere-se aos professores do Departamento de Estatística da UFRGS no segundo semestre de 2024.

## Definições

- **Unidade Elementar:** Cada professor individual que faz parte do Departamento de Estatística no segundo semestre de 2024.
- **Característica:** Número de artigos completos publicados em periódicos.
- **Parâmetro de interesse:** Média do número de artigos completos publicados em periódicos.

## Tabela de dados
Primeiras 10 observações da tabela:
```{r table_head}

knitr::kable(head(db, 10),
  col.names = c("Nome", "Quant. Artigos"),
  align = "lr"
) %>%
  kable_styling(font_size = 23)
```

## Histograma
<span class="small-text"> Quantidade de artigos publicados por professor: </span>

```{r hist, warning=FALSE}

showtext_auto()

im_suzi     <- readPNG("img/foto_suzi.png")
im_patricia <- readPNG("img/foto_patricia.png")
im_alvaro   <- readPNG("img/foto_alvaro.png")

ggplot(db, aes(x = quant_artigos)) +
  geom_histogram(binwidth = 8, fill = "tomato", color = "black", size = 0.8) +
  geom_curve(aes(
      x = 120, y = 1,
      xend = 109, yend = 3.5
    ),
    curvature = 0.3,
    arrow = arrow(length = unit(0.2, "inches")),
    size = 0.8,
  ) +
  geom_curve(aes(
    x = 12, y = 9.7,
    xend = 25, yend = 8
  ),
  curvature = 0.4,
  arrow = arrow(length = unit(0.2, "inches")),
  size = 0.8,
  ) +
  geom_curve(aes(
    x = 80, y = 2,
    xend = 90, yend = 7.5
  ),
  curvature = -0.4,
  arrow = arrow(length = unit(0.2, "inches")),
  size = 0.8,
  ) +
  labs(x = 'Quantidade de artigos publicados',
       y = 'Frequência') +
  annotation_raster(im_suzi, xmin = 86, xmax = 111, ymin = 2.5, ymax = 5) +
  annotation_raster(im_patricia, xmin = 91, xmax = 105, ymin = 7.5, ymax = 10) +
  annotation_raster(im_alvaro, xmin = 107, xmax = 120, ymin = 7.5, ymax = 10) +
  annotate(geom= 'text', label = "Suzi Alves Camey\ntem 120 artigos publicados", x = 98.2, y = 5.5,  size = 8, lineheight = 0.5) +
  annotate(geom= 'text', label = "41% dos pesquisadores tem\nentre 4 a 12 artigos publicados", x = 41, y = 8,  size = 8, lineheight = 0.5) +
  annotate(geom= 'text', label = "Patrícia Ziegelmann e Álvaro Vigo são o 2° e o 3°\ncom maior quantidade de publicações", x = 105, y = 10.5,  size = 8, lineheight = 0.5) +
  theme(panel.grid = element_blank(),
        panel.grid.minor = element_blank(),
        plot.background = element_rect(fill = NA),
        panel.background = element_rect(fill = NA),
        plot.title = element_text(size = 30, hjust = 0.5),
        plot.subtitle = element_text(size = 20, hjust = 0.5,lineheight = 0.5),
        axis.text = element_text(size = 20),
        axis.title.x = element_text( size = 21),
        axis.title.y = element_text( size = 21))

```

## Boxplot

<div style="display: flex; align-items: center;">
<div style="flex: 1; padding-right: 5px;">

```{r, warning=FALSE, fig.height= 5, fig.width= 5}

p = ggplot() +
  geom_boxplot(data = db,
               aes(y = quant_artigos, fill = "tomato"),
               outlier.size = 2.5,
               width = 0.1) +
  scale_x_continuous(limits = c(-0.3,0.3)) +
  ylab("Número de Artigos") +
  theme_classic() +
  theme(axis.title.y = element_text(size = 30),
        axis.text.y = element_text(size = 25),
        axis.text.x = element_blank(),
        axis.ticks.x =element_blank(),
        legend.position = "none")

plot(p)
```

</div>
<div style="flex: 1;">
- Podemos ver que a distribuição de nossa população de pesquisa possui uma assimetria à direita e alguns valores atípicos (outliers).
- A média é muito sensível a presença de valores atípicos. Portanto, podemos esperar uma variância alta.
</div>
</div>

## Plano amostral

- **Objetivo de Estudo**: Analisar o número médio de artigos completos publicados em periódicos utilizando estimadores;
- **População Pesquisa**: Professores do departamento de estatística da UFRGS no semestre 2024/01;
- **Coleta de dados**: Os dados são públicos e foram coletados pelo grupo através do Currículo Lattes de cada professor.

## Estimando parâmetros {background-color="#FFFAFA".scrollable}
### Valores da população de pesquisa

```{r pop_param, include = FALSE}
N         <- nrow(db)
media_pop <- mean(v_artigos)
var_pop   <- var(v_artigos)*(N-1)/N
```

::: columns
::: {.column width="37%"}
$\mu$  = `r media_pop`
:::

::: {.column width="63%"}
$\sigma^2$ = `r var_pop`
:::
:::

``` {r estimadores, include = FALSE}

n         <- 10
total_pop <- N*mean(v_artigos)
```

::: {.panel-tabset}

### Estimador da média
<span class="small-text"> Utilizando AASs, consideremos n = 10 \n</span>
$$
\bar X = \frac{1}{n} \sum_{i=1}^{n} X_i
$$

<span class="small-text"> Sendo $\bar X$ não viessado temos que E($\bar X$) = $\mu$ </span>

```{r var_barX, include = FALSE}

comb_amost      <- comboGeneral(v_artigos, n)
comb_amost_mean <- apply(comb_amost, 2, mean)
var_barX        <- var(comb_amost_mean)
mean_barX       <- mean(comb_amost_mean)
```

::: columns
::: {.column width="37%"}
<span class="small-text"> E($\bar X$) = `r mean_barX` </span>

:::

::: {.column width="63%"}
<span class="small-text">Var($\bar X$) = `r var_barX` </span>

:::
:::

<span class="small-text"> Distribuição amostral de $\bar X$: </span>


```{r hist_barX, echo = FALSE}

ggplot(data.frame(comb_amost_mean), aes(x = comb_amost_mean)) +
  geom_histogram(binwidth = 8, fill = "tomato", color = "black", size = 0.8) +
  labs(title = 'Histograma das médias amostrais', x = 'Médias', y = 'Frequência') +
  theme(panel.grid = element_blank(),
        panel.grid.minor = element_blank(),
        plot.background = element_rect(fill = '#FFFAFA'),
        panel.background = element_rect(fill = '#FFFAFA'),
        plot.title = element_text(size = 30, hjust = 0.5),
        plot.subtitle = element_text(size = 20, hjust = 0.5,lineheight = 0.5),
        axis.text = element_text(size = 20),
        axis.title.x = element_text( size = 21),
        axis.title.y = element_text( size = 21))

```

```{r p_elem_amostra, include = FALSE}

prob_elem_amostra <- n / N
```

<span class="small-text"> A probabilidade de um elemento específico estar na amostra é de `r prob_elem_amostra` <BR><BR>
Calculando o Erro Padrão de $\bar X$: </span>

```{r erro_barX, include = FALSE}

ep_barX <- sqrt(var_pop / (n)) * sqrt((N - n)/(N - 1))
```

<span class="small-text"> EP($\bar X$) = $\frac{\sigma}{\sqrt{n}} \times \sqrt{\frac{N-n}{N-1}}$ = `r ep_barX` </span>

```{r, est_media, echo = TRUE}

df <- data.frame(
    amostra = sample(v_artigos, n),
    N = N
)

plano_aass <- svydesign(
    ids = ~ 1,
    data = df
)

svymean(
    x = ~ amostra,
    design = plano_aass
)
```

:::

## Intervalos para diferentes amostras!

```{r, visualização, warning=FALSE}
set.seed(12345)

showtext_auto()

media_verdadeira <- mean(db$quant_artigos)

amostras <- replicate(14, sample(db$quant_artigos, 10, replace = FALSE))
medias <- apply(amostras, 2, mean)
sds <- apply(amostras, 2, sd)
lim_inf <- medias - qt(0.90, df = 9) * sds / sqrt(10)
lim_sup <- medias + qt(0.90, df = 9) * sds / sqrt(10)


df_plot <- data.frame(
  Amostra = factor(1:14),
  Media = medias,
  IC_Lower = lim_inf,
  IC_Upper = lim_sup
)

aass_amostra_2 <- sample(x = seq_len(nrow(db)), size = 10, replace = FALSE)
media_amostra_2 <- mean(db$quant_artigos[aass_amostra_2])
sd_amostra_2 <- sd(db$quant_artigos[aass_amostra_2])
ic_lower_amostra_2 <- media_amostra_2 - qt(0.90, df = 9) * sd_amostra_2 / sqrt(10)
ic_upper_amostra_2 <- media_amostra_2 + qt(0.90, df = 9) * sd_amostra_2 / sqrt(10)

# Adicionar amostra específica ao dataframe
df_plot <- rbind(df_plot, data.frame(
  Amostra = "Amostra Específica",
  Media = media_amostra_2,
  IC_Lower = ic_lower_amostra_2,
  IC_Upper = ic_upper_amostra_2
))


x_limits <- c(0, 65)

p1 <- ggplot(db, aes(x = quant_artigos)) +
  geom_histogram(aes(y = ..density..),
                 fill = "tomato",
                 color = "black",
                 size = 0.5,
                 bins = 50) +
  geom_vline(xintercept = media_verdadeira,
             linetype = "dashed",
             color = "red",
             size = 1) +
  theme_minimal() +
  labs(x = NULL,
       y = NULL) +
  coord_cartesian(xlim = x_limits) +
  theme(panel.grid = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_blank()) +
  annotate("text",
           x = 40,
           y = 0.058,
           label = "Média população\nde Pesquisa: 28.10",
           size = 8, color = "black",
           lineheight = 0.5) +
  annotate("text",
           x = 60,
           y = 0.058,
           label = "Nível de confiança\nutilizado: 90%",
           size = 9,
           color = "black",
           lineheight = 0.5,
           fontface = "bold") +
  annotate("curve", x = 36,
           xend = media_verdadeira+0.5,
           y = 0.045,
           yend = 0.03,
           curvature = -0.2,
           arrow = arrow(type = "closed", length = unit(0.09, "inches")),
           color = "black")

p2 <- ggplot(df_plot, aes(x = Amostra, y = Media)) +
  geom_point(size = 3,
             color = ifelse(df_plot$Amostra == "Amostra Específica", "blue", "black")) +
  geom_errorbar(aes(ymin = IC_Lower, ymax = IC_Upper),
                width = 0.2,
                color = ifelse(df_plot$Amostra == "Amostra Específica", "blue", "black")) +
  geom_hline(yintercept = media_verdadeira,
             linetype = "dashed",
             color = "red",
             size = 1) +
  coord_flip() +
  scale_y_continuous(limits = x_limits) +
  labs(x = NULL,
       y = NULL) +
  theme_minimal() +
  theme(panel.grid = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_blank()) +
  annotate("text", x = 14,
           y = 54,
           label = "Nossa amostra tem\nMédia de 16.1",
           size = 8,
           color = "black",
           lineheight = 0.5) +
  annotate("curve", x = 14,
           xend = 15,
           y = 49,
           yend = 34,
           curvature = 0.2,
           arrow = arrow(type = "closed", length = unit(0.09, "inches")),
           color = "black")

grid.arrange(p1, p2, ncol = 1, heights = c(1, 2))

```

## Estimando tamanho de amostra para estudo futuro
```{r, cálculo tamanho de amostra, echo = TRUE}
set.seed(12345)

# Coletando uma amostra de n = 10 para obter informações sobre o
# desvio padrão populacional

aass_amostra_2 <- sample(x = seq_len(nrow(df)),
                         size = 10,
                         replace = FALSE)

# Fixando uma margem de erro de 4 trabalhos publicados
# para mais ou para menos

margem_erro   <- 4
desvio_padrao <- sd(aass_amostra_2)
alpha         <- .1
n             <- 10
n_por_t2      <- 0
s2_por_e2     <- 1

while (n_por_t2 < s2_por_e2){
  tcalc     <- abs(qt(p = alpha/2, df = n - 1))
  n_por_t2  <- n/((tcalc)^2)
  s2_por_e2 <- (desvio_padrao^2)/(margem_erro^2)
  n         <- n+1
}

```

<span class="small-text"> Tamanho de amostra estimado: `r n` </span>
